<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.GongguReviewMapper">
	
	<!-- 리뷰 데이터 총 개수 -->
	<select id="dataCount"  parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM gongguReview
		WHERE gongguProductId = #{gongguProductId} AND showReview = 1 AND block = 0
		<choose>
			<when test="sortBy==5">
				AND rate = 5 
			</when>
			<when test="sortBy==4">
				AND rate = 4 
			</when>
			<when test="sortBy==3">
				AND rate = 3  
			</when>
			<when test="sortBy==2">
				AND rate = 2 
			</when>
			<when test="sortBy==1">
				AND rate = 1 
			</when>
		</choose>
	</select>

	<!-- 리뷰 목록 조회 -->
	<select id="listReview" parameterType="map" resultType="com.sp.app.model.GongguReview">
		SELECT gr.gongguOrderDetailId, gr.memberId, gr.gongguProductId, m2.name, gr.rate, 
			gr.content, gr.showReview, gr.regDate, gr.answer, gr.answerId, 
			gr.answerDate, gr.block, rd.reviewImg 
		FROM gongguReview gr
		JOIN member2 m2 ON gr.memberId = m2.memberId
		LEFT OUTER JOIN (
			SELECT gongguOrderDetailId, LISTAGG(reviewImg, ',') WITHIN GROUP(ORDER BY reviewPhotoId) reviewImg
			FROM gongguReviewDetail
			GROUP BY gongguOrderDetailId
		) rd ON gr.gongguOrderDetailId = rd.gongguOrderDetailId
		WHERE gr.gongguProductId = #{gongguProductId} AND gr.showReview = 1 AND gr.block = 0
		<choose>
			<when test="sortBy==5">
				AND gr.rate = 5 
			</when>
			<when test="sortBy==4">
				AND gr.rate = 4 
			</when>
			<when test="sortBy==3">
				AND gr.rate = 3  
			</when>
			<when test="sortBy==2">
				AND gr.rate = 2 
			</when>
			<when test="sortBy==1">
				AND gr.rate = 1 
			</when>
		</choose>
		ORDER BY gr.regDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 리뷰 요약 정보 -->
	<select id="findByReviewSummary" parameterType="map" resultType="com.sp.app.model.GongguSummary">
		SELECT NVL(COUNT(*), 0) count,
			   ROUND(NVL(AVG(rate), 0), 1) ave
		FROM gongguReview
		WHERE gongguProductId = #{gongguProductId} AND showReview = 1 AND block = 0
	</select>
	
	<!-- 리뷰 삽입 -->
	<insert id="insertReview" parameterType="com.sp.app.model.GongguReview">
		INSERT INTO gongguReview(gongguOrderDetailId, memberId, rate, content, gongguProductId, 
			regDate, showReview, block)
		VALUES(#{gongguOrderDetailId}, #{memberId}, #{rate}, #{content}, #{gongguProductId}, SYSDATE, 1, 0)
	</insert>
	
	<!-- 리뷰 사진 삽입 -->
	<insert id="insertReviewDetail" parameterType="com.sp.app.model.GongguReview">
		<selectKey keyProperty="reviewPhotoId" resultType="long" order="BEFORE">
			SELECT gongguReviewDetail_seq.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO gongguReviewDetail(reviewPhotoId, gongguOrderDetailId, reviewImg, imgSize)
		VALUES(#{reviewPhotoId}, #{gongguOrderDetailId}, #{reviewImg}, #{imgSize})
	</insert>
	
	<!-- 리뷰 상세 조회 -->
	<select id="viewReviewDetail" parameterType="Long" resultType="com.sp.app.model.GongguReview">
		SELECT gr.gongguOrderDetailId, gr.memberId, gr.gongguProductId, gr.content, gr.rate, gr.showReview, gr.regDate, gr.answer, gr.answerId, gr.answerDate, gr.block,
				m2.name, rd.reviewImg
		FROM gongguReview gr
		JOIN member2 m2 ON gr.memberId = m2.memberId
		LEFT OUTER JOIN (
			SELECT gongguOrderDetailId, LISTAGG(reviewImg, ',') WITHIN GROUP(ORDER BY reviewPhotoId) reviewImg
			FROM gongguReviewDetail
			GROUP BY gongguOrderDetailId
		) rd ON gr.gongguOrderDetailId = rd.gongguOrderDetailId
		WHERE gr.gongguOrderDetailId = #{gongguOrderDetailId} AND gr.showReview = 1 AND gr.block = 0
	</select>
	
	<!-- 리뷰 도움이 돼요 삭제 -->
	<delete id="deleteReviewHelpful" parameterType="com.sp.app.model.GongguReviewHelpful">
		DELETE FROM reviewHelpful WHERE memberId = #{memberId} AND gongguOrderDetailId = #{gongguOrderDetailId}
	</delete>
	
	<!-- 리뷰 도움이 돼요 삽입 -->
	<insert id="insertReviewHelpful" parameterType="com.sp.app.model.GongguReviewHelpful">
		INSERT INTO reviewHelpful(memberId, gongguOrderDetailId, reviewLike) 
		VALUES(#{memberId}, #{gongguOrderDetailId}, #{userReviewHelpful})
	</insert>
	
	<!-- 리뷰 도움이 돼요 개수 카운트 -->
	<select id="countReviewHelpful" parameterType="map" resultType="Integer">
		SELECT COUNT(DECODE(reviewLike, 1, 1)) helpfulCount
		FROM reviewHelpful
		WHERE gongguOrderDetailId = #{gongguOrderDetailId}
	</select>
	
	<!-- 사용자의 리뷰 도움이 돼요 여부 확인 -->
	<select id="userReviewHelpful" parameterType="map" resultType="Integer">
		SELECT reviewLike
		FROM reviewHelpful
		WHERE gongguOrderDetailId = #{gongguOrderDetailId} AND memberId = #{memberId}
	</select>
	
	<!-- 내가 쓴 리뷰 개수 카운트 -->
	<select id="myDataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM gongguReview
		<where>
			<if test="memberId != null">
				memberId = #{memberId}
			</if>
			<if test="mode != null">
				<if test="mode == 2">
					AND ( answer IS NOT NULL )
				</if>
				<if test="mode == 3">
					AND ( answer IS NULL )
				</if>
			</if>
		</where>
	</select>
	
	<!-- 내가 쓴 리뷰 목록 조회 -->
	<select id="listMyReview" parameterType="map" resultType="com.sp.app.model.GongguReview">
		SELECT gr.gongguOrderDetailId, gr.memberId, m2.name, gr.rate, gr.content, gr.regDate, 
			gr.answerId, mm2.name AS answerName, gr.answer, gr.answerDate, 
			gr.showReview, gr.block,  
			gr.gongguProductId, f.reviewImg, 
			gp.gongguProductName 
		FROM gongguReview gr
		JOIN member2 m2 ON gr.memberId = m2.memberId 
		LEFT OUTER JOIN member2 mm2 ON gr.answerId = mm2.memberId 
		JOIN gongguProduct gp ON gr.gongguProductId = gp.gongguProductId
		LEFT OUTER JOIN (
			SELECT gongguOrderDetailId, LISTAGG(reviewImg, ',') WITHIN GROUP(ORDER BY reviewPhotoId) reviewImg
            FROM gongguReviewDetail
            GROUP BY gongguOrderDetailId
		) f ON gr.gongguOrderDetailId = f.gongguOrderDetailId
		<where>
			<if test="memberId != null">
				gr.memberId = #{memberId}
			</if>
			<if test="mode != null">
				<if test="mode == 2">
					AND ( gr.answer IS NOT NULL )
				</if>
				<if test="mode == 3">
					AND ( gr.answer IS NULL )
				</if>
			</if>
		</where>
		ORDER BY gr.regDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 리뷰 파일 목록 조회 -->
	<select id="listReviewFile" parameterType="long" resultType="com.sp.app.model.GongguReview">
		SELECT reviewPhotoId, gongguOrderDetailId, reviewImg
		FROM gongguReviewDetail
		WHERE gongguOrderDetailId = #{gongguOrderDetailId}
	</select>
		
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="long">
		DELETE FROM gongguReview
		WHERE gongguOrderDetailId = #{gongguOrderDetailId}
	</delete>
</mapper>
