<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.GongguOrderMapper">
	<select id="findByMaxOrderNumber" resultType="String">
		SELECT orderId
		FROM productOrder
		ORDER BY orderDate DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	<!-- 주문 등록 -->
	<insert id="insertGongguOrder" parameterType="com.sp.app.model.GongguOrder">
		INSERT INTO productOrder(orderId, memberId, orderDate, totalAmount, 
			 deliveryCharge, payment, cancelAmount, orderState, usedPoint, classify, orderStateDate, itemCount) 
		VALUES (#{orderId}, #{memberId}, SYSDATE, #{totalAmount}, 
			 #{deliveryCharge}, #{payment}, 0, 1, 0, 2, SYSDATE, 1)
	</insert>

	<!-- 결제 내역 등록 -->
	<insert id="insertGongguPayDetail" parameterType="com.sp.app.model.GongguOrder">
		INSERT INTO payment(orderId, imp_uid, payMethod, cardName, cardNumber, applyNum, applyDate) 
		VALUES (#{orderId}, #{imp_uid, jdbcType=VARCHAR}, #{payMethod, jdbcType=VARCHAR}, #{cardName, jdbcType=VARCHAR}, 
			#{cardNumber, jdbcType=VARCHAR}, #{applyNum, jdbcType=VARCHAR},
			TO_DATE(#{applyDate}, 'YYYY-MM-DD HH24:MI:SS') )
	</insert>

	<!-- 주문 상세 정보 등록 -->
	<insert id="insertGongguOrderDetail" parameterType="com.sp.app.model.GongguOrder">
		INSERT INTO gongguOrderDetail(gongguOrderDetailId, orderId, cnt, price, 
			gongguProductId, userDelete, detailState) 
		VALUES (gongguOrderDetail_seq.NEXTVAL, #{orderId}, #{cnt}, #{price},  
			#{gongguProductId}, 0, 1)
	</insert>
	
	<!-- 배송지 등록 -->
	<insert id="insertGongguOrderDelivery" parameterType="com.sp.app.model.GongguOrder">
		INSERT INTO deliveryDestination(orderId, recipientName, tel, zip, addr1, addr2, pickup, 
			accessInfo, passcode, requestMemo) 
		VALUES (#{orderId}, #{recipientName}, #{tel}, #{zip}, #{addr1}, #{addr2}, 
			#{pickup, jdbcType=VARCHAR}, #{accessInfo, jdbcType=VARCHAR}, 
			#{passcode, jdbcType=VARCHAR}, #{requestMemo, jdbcType=VARCHAR})
	</insert>
	
	<!-- 주문 내역 상세 리스트 -->
	<select id="listGongguOrderProduct" parameterType="java.util.List" resultType="com.sp.app.model.GongguOrder">
		SELECT d.gongguProductId, d.cnt,
			g.gongguProductName, d.price, g.gongguThumbnail
		FROM gongguOrderDetail d
		JOIN gongguProduct g ON d.gongguProductId = g.gongguProductId
		WHERE (d.gongguProductId, d.orderId) IN
			<foreach collection="list" item="item" index="index"
				open="(" separator="," close=")">
				(#{item.gongguProductId}, #{item.orderId})
			</foreach>
	</select>

	<select id="countBuyGonggu" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM gongguOrderDetail od
	    JOIN productOrder po ON od.orderId = po.orderId
	    WHERE po.memberId = #{memberId} AND od.gongguProductId = #{gongguProductId}
	</select>
	
	<select id="myReviewOfGonggu" parameterType="Long" resultType="com.sp.app.model.GongguReview">
		SELECT gongguOrderDetailId, memberId, gongguProductId, content, rate, showReview, regDate, answer, answerId, answerDate, block
		FROM gongguReview
		WHERE gongguOrderDetailId = #{gongguOrderDetailId}
	</select>
	
	<select id="findByGongguProduct" parameterType="long" resultType="com.sp.app.model.GongguOrder">
	SELECT
		gongguProductId,
		gongguProductName,
		originalPrice,
		sale,
		TRUNC(originalPrice * (1 - sale/100)) AS salePrice,
		gongguThumbnail,
		content,
		detailInfo
	FROM gongguProduct
	WHERE gongguProductId = #{gongguProductId}
	</select>
	
	<!-- 마이페이지 주문내역 -->
	<select id="countGongguPayment" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(DISTINCT god.gongguOrderDetailId), 0)
		FROM productOrder po
		JOIN gongguOrderDetail god ON po.orderId = god.orderId
		JOIN gongguProduct gp ON god.gongguProductId = gp.gongguProductId
		WHERE po.memberId = #{memberId}
		AND god.userDelete = 0 
		<if test="orderState != null and orderState != 0">
			AND po.orderState = #{orderState}
		</if>
		<if test="detailState != null and detailState != 0">
			AND god.detailState = #{detailState}
		</if>
	</select>

	<select id="listGongguPayment" parameterType="map" resultType="com.sp.app.model.GongguPayment">
		SELECT po.orderId, po.memberId, po.orderDate, po.totalAmount, po.payment, po.orderState, po.orderStateDate, po.deliveryName, po.invoiceNumber, god.gongguOrderDetailId, god.gongguProductId, god.cnt, god.price, god.detailState, g.gongguProductName, g.gongguThumbnail ,po.classify, po.deliveryCharge
		FROM productOrder po
		JOIN gongguOrderDetail god ON po.orderId = god.orderId
		JOIN gongguProduct g ON god.gongguProductId = g.gongguProductId
		JOIN member1 m1 ON po.memberId = m1.memberId
		WHERE po.memberId = #{memberId} AND god.userDelete = 0 AND po.classify = 2
		ORDER BY orderDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	<select id="listGongguPurchase" parameterType="map" resultType="com.sp.app.model.GongguPayment">
		SELECT po.orderId, po.memberId, TO_CHAR(po.orderDate, 'YYYY-MM-DD HH24:MI:SS') AS orderDate,
			po.totalAmount, po.payment, po.orderState,
			po.itemCount, po.deliveryName, po.invoiceNumber, po.deliveryCharge
			god.gongguOrderDetailId, god.cnt, god.price, god.detailState,
			gp.gongguProductName, gp.gongguThumbnail
		FROM productOrder po
		JOIN gongguOrderDetail god ON po.orderId = god.orderId
		JOIN gongguProduct gp ON god.gongguProductId = gp.gongguProductId
		WHERE po.orderId = #{orderId}
		ORDER BY god.gongguOrderDetailId ASC
	</select>

	<select id="findByGongguOrderDetail" parameterType="map" resultType="com.sp.app.model.GongguPayment">
		SELECT po.orderId, po.memberId, TO_CHAR(po.orderDate, 'YYYY-MM-DD HH24:MI:SS') AS orderDate,
			po.totalAmount, po.usedPoint, po.payment, po.orderState, TO_CHAR(po.orderStateDate, 'YYYY-MM-DD HH24:MI:SS') AS orderStateDate,
			po.itemCount, po.deliveryName, po.invoiceNumber, po.classify,
			god.gongguOrderDetailId, god.cnt, god.userDelete,
			god.gongguProductId, god.price, god.detailState,
			gp.gongguProductName, gp.gongguThumbnail, gp.originalPrice, gp.sale,
			(gp.originalPrice - (gp.originalPrice * gp.sale / 100)) AS gongguPrice,
			(SELECT fee FROM gongguDeliveryFee WHERE gongguDeliveryFeeNum = (SELECT MAX(gongguDeliveryFeeNum) FROM gongguDeliveryFee)) AS deliveryFee, <!-- 공동구매 배송비 추가 -->
			(SELECT stateInfo FROM orderStateDetail WHERE detailState = god.detailState) AS detailStateInfo,
			TO_CHAR(py.applyDate, 'YYYY-MM-DD HH24:MI:SS') AS applyDate, py.payMethod, py.cardName, py.cardNumber, py.applyNum, py.imp_uid,
			(SELECT loginId FROM member2 WHERE memberId = po.memberId) AS loginId, <!-- loginId 추가 -->
			(SELECT COUNT(*) FROM gongguReview gr WHERE gr.gongguProductId = god.gongguProductId AND gr.memberId = po.memberId AND gr.gongguOrderDetailId = god.gongguOrderDetailId) AS reviewWrite,
			osi.stateMemo, TO_CHAR(osi.stateDate, 'YYYY-MM-DD HH24:MI:SS') AS stateDate
		FROM productOrder po
		JOIN gongguOrderDetail god ON po.orderId = god.orderId
		JOIN gongguProduct gp ON god.gongguProductId = gp.gongguProductId
		LEFT JOIN payment py ON po.orderId = py.orderId
		LEFT JOIN orderStateInfo osi ON god.gongguOrderDetailId = osi.orderDetailId AND osi.state = god.detailState
		WHERE po.memberId = #{memberId} AND god.gongguOrderDetailId = #{gongguOrderDetailId}
	</select>

	<select id="findByGongguOrderDelivery" parameterType="map" resultType="com.sp.app.model.GongguOrder">
		SELECT recipientName, tel, zip, addr1, addr2,
			pickup, accessInfo, passcode, requestMemo
		FROM deliveryDestination
		WHERE orderId = #{orderId}
	</select>

	<update id="updateGongguOrderDetailState" parameterType="map">
		UPDATE gongguOrderDetail SET detailState = #{detailState}
		WHERE gongguOrderDetailId = #{gongguOrderDetailId}
	</update>

	<update id="updateGongguOrderHistory" parameterType="long">
		UPDATE gongguOrderDetail SET userDelete = 1
		WHERE gongguOrderDetailId = #{gongguOrderDetailId}
	</update>

	<insert id="insertGongguDetailStateInfo" parameterType="map">
		INSERT INTO orderStateInfo(stateInfoId, orderDetailId, state, stateMemo, stateDate)
		VALUES(orderStateInfo_seq.NEXTVAL, #{gongguOrderDetailId}, #{detailState}, #{stateMemo}, SYSDATE)
	</insert>

	<update id="updateGongguReviewWrite" parameterType="long">
		UPDATE gongguOrderDetail SET reviewWrite = 1
		WHERE gongguOrderDetailId = #{gongguOrderDetailId}
	</update>

	<select id="findGongguOrderDetailForReview" parameterType="long" resultType="com.sp.app.model.GongguPayment">
		SELECT god.gongguOrderDetailId, god.gongguProductId, god.price, god.cnt,
			gp.gongguProductName, gp.gongguThumbnail
		FROM gongguOrderDetail god
		JOIN gongguProduct gp ON god.gongguProductId = gp.gongguProductId
		WHERE god.gongguOrderDetailId = #{gongguOrderDetailId}
	</select>

</mapper>