<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.admin.mapper.ProductReviewInquiryManageMapper">

	<select id="findAllReviews" resultType="com.sp.app.admin.model.ProductReviewManage">
	SELECT reviewId, m2.name AS userName, pr.content, pr.regDate, p.productId, pr.productCode, pr.memberId, pr.showReview, pr.answerId, pr.answerDate, pr.answer, p.productName, pr.rate
	FROM productReview pr
	JOIN member1 m1 ON pr.memberId = m1.memberId
	JOIN member2 m2 ON m1.memberId = m2.memberId
	JOIN product p ON pr.productCode = p.productCode
	ORDER BY pr.regDate DESC
	</select>
	
	<select id="findAllInquirys" resultType="com.sp.app.admin.model.ProductInquiryManage">
	 	SELECT p.productName, i.title, i.content, i.regDate, (CASE WHEN i.answer IS NOT NULL THEN 1 ELSE 0 END) AS status, m2.name AS userName, m1.userId, m1.userLevel, c.categoryId,
	 		 c.categoryName, i.inquiryId, i.answerId, i.answer, i.answerDate, m2.name AS answerName
	 	FROM productInquiry i
	 	LEFT JOIN Product p ON i.productCode = p.productCode
		LEFT JOIN member1 m1 ON i.memberId = m1.memberId
		LEFT JOIN member2 m2 ON m1.memberId = m2.memberId
		LEFT JOIN productCategory c ON p.categoryId = c.categoryId
		ORDER BY i.regDate DESC
	</select>
	
	<select id="findReviewsBySearch" parameterType="map" resultType="com.sp.app.admin.model.ProductReviewManage">
    SELECT reviewId, m2.name AS userName, pr.content, pr.regDate, (CASE WHEN pr.answer IS NOT NULL THEN 1 ELSE 0 END) AS status, p.productId, pr.productCode, pr.memberId, pr.showReview, pr.answerId, pr.answerDate, pr.answer, p.productName, pr.rate
    FROM productReview pr
    JOIN member1 m1 ON pr.memberId = m1.memberId
    JOIN member2 m2 ON m1.memberId = m2.memberId
    JOIN product p ON pr.productCode = p.productCode
    <where>
        <if test="productName != null and !productName.isEmpty()">
            AND p.productName LIKE '%' || #{productName} || '%'
        </if>
        <if test="kwd != null and !kwd.isEmpty()">
            AND (pr.content LIKE '%' || #{kwd} || '%' OR m2.name LIKE '%' || #{kwd} || '%')
        </if>
    </where>
    ORDER BY pr.regDate DESC
	</select>
	
	<select id="findInquirysBySearch" parameterType="map" resultType="com.sp.app.admin.model.ProductInquiryManage">
		SELECT p.productName, i.title, i.content, i.regDate, (CASE WHEN i.answer IS NOT NULL THEN 1 ELSE 0 END) AS status, m2.name AS userName, m1.userId, m1.userLevel, c.categoryId,
	 		 c.categoryName, i.inquiryId, i.answerId, i.answer, i.answerDate, m2.name AS answerName
	 	FROM productInquiry i
	 	LEFT JOIN product p ON i.productCode = p.productCode
		LEFT JOIN member1 m1 ON i.memberId = m1.memberId
		LEFT JOIN member2 m2 ON m1.memberId = m2.memberId
		LEFT JOIN productCategory c ON p.categoryId = c.categoryId
		<where>
	        <if test="productName != null and !productName.isEmpty()">
	            AND p.productName LIKE '%' || #{productName} || '%'
	        </if>
	        <if test="kwd != null and !kwd.isEmpty()">
	            AND (i.content LIKE '%' || #{kwd} || '%' OR m2.name LIKE '%' || #{kwd} || '%')
	        </if>
	    </where>
	    ORDER BY i.regDate DESC
	</select>
	
	<update id="updateAnswer" parameterType="com.sp.app.admin.model.ProductInquiryManage">
		UPDATE productInquiry SET answer = #{answer}, answerDate = SYSDATE, answerId = #{answerId}
		WHERE inquiryId = #{inquiryId}
	</update>
	
	<select id="answerNameFindById" parameterType="Long" resultType="String">
	    SELECT name
	    FROM member2
	    WHERE memberId = #{answerId}
	</select>
	
	<update id="deleteAnswer" parameterType="Long">
		UPDATE productInquiry SET answerId = null, answer = null, answerDate = null WHERE inquiryId = #{inquiryId}
	</update>
	
	<delete id="deleteInquiry" parameterType="Long">
		DELETE FROM productInquiry WHERE inquiryId = #{inquiryId}
	</delete>
</mapper>