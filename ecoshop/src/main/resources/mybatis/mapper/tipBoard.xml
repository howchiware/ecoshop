<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.TipBoardMapper">
	<select id = "tipBoardSeq" resultType="long">
		SELECT tipBoard_seq.NEXTVAL
		FROM dual
	</select>
	<insert id="insertTipBoard" parameterType="com.sp.app.model.TipBoard">
		INSERT INTO tipBoard(tipId, memberId, subject, content, groupNum, depth, orderNo, parent, 
		hitCount, regDate, block, report)
		VALUES (#{tipId}, #{memberId}, #{subject}, #{content}, #{groupNum}, #{depth}, #{orderNo}, #{parent}, 0, SYSDATE, 0, 0)
	</insert>
	
	<sql id="where-list">
		<choose>
			<when test="schType == 'all' ">
				( INSERT(subject, #{kwd}) &gt; 0
					OR INSERT(content, #{kwd}) &gt; 0)
			</when>
			<when test="schType == 'regDate' ">
				( INSTR(TO_CHAR(regDate, 'YYYYMMDD'), #{kwd}) &gt; 0
					OR TO_CHAR(regDate, 'YYYY-MM-DD') = #{kwd} )
			</when>
			<otherwise>
			    INSTR(${schType}, #{kwd}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM tipBoard t
		JOIN member2 m ON t.memberId = m.memberId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<select id="listTipBoard" parameterType="map" resultType="com.sp.app.model.TipBoard">
		SELECT tipId, name, t.memberId, subject, regDate, hitCount, groupNum, orderNo, depth
		FROM tipBoard t
		JOIN member2 m ON t.memberId = m.memberId
		<where>
			<if test="kwd != null and kwd != ''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY groupNum DESC, orderNo ASC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="findById" parameterType="Long" resultType="com.sp.app.model.TipBoard">
		SELECT t.tipId, t.memberId, name, subject, content, groupNum, depth, orderNo, parent, regDate, hitCount, NVL(tipLikeCount, 0) tipLikeCount
		FROM tipBoard t
		JOIN member2 m ON t.memberId = m.memberId
		LEFT OUTER JOIN (
			SELECT tipId, COUNT(*) tipLikeCount
			FROM tipLike
			GROUP BY tipId
		) bc ON t.tipId = bc.tipId
		WHERE t.tipId = #{tipId}
	</select>
	
	<update id="updateHitCount" parameterType="Long">
		UPDATE tipBoard SET hitCount = hitCount + 1
		WHERE tipId = #{tipId}
	</update>
	
	<select id="findByPrev" parameterType="map" resultType="com.sp.app.model.TipBoard">
		SELECT tipId, subject
		FROM tipBoard t
		JOIN member2 m ON t.memberId = m.memberId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND ( (groupNum = #{groupNum} AND orderNo < #{orderNo})
					  OR (groupNum > #{groupNum}) )
			]]>
		</where>
		ORDER BY groupNum ASC, orderNo DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="findByNext" parameterType="map" resultType="com.sp.app.model.TipBoard">
		SELECT tipId, subject
		FROM tipBoard t
		JOIN member2 m ON t.memberId = m.memberId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			<![CDATA[
				AND ( (groupNum = #{groupNum} AND orderNo > #{orderNo})
					  OR (groupNum < #{groupNum}) )
			]]>
		</where>
		ORDER BY groupNum DESC, orderNo ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateOrderNo" parameterType="map">
		UPDATE tipBoard SET orderNo = orderNo + 1
		WHERE groupNum = #{groupNum} AND orderNo &gt; #{orderNo}
	</update>
	
	<update id="updateTipBoard" parameterType="com.sp.app.model.TipBoard">
		UPDATE tipBoard SET subject = #{subject}, content = #{content}
		WHERE tipId = #{tipId} AND memberId = #{memberId}
	</update>
	
	<delete id="deleteTipBoard" parameterType="Long">
		DELETE FROM tipBoard
		WHERE tipId IN
			( SELECT tipId FROM tipBoard START WITH tipId = #{tipId}
				CONNECT BY PRIOR tipId = parent )
	</delete>
	
	<!-- 좋아요 -->
	<insert id="insertTipBoardLike" parameterType="map">
		INSERT INTO tipLike(memberId, tipId) VALUES (#{memberId}, #{tipId})
	</insert>
	
	<delete id="deleteTipBoardLike" parameterType="map">
		DELETE FROM tipLike
		WHERE  tipId = #{tipId} AND memberId = #{memberId}
	</delete>
	
	<select id = "tipLikeCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*)
		FROM tipLike
		WHERE tipId = #{tipId}
	</select>

	<select id="hasUserTipBoardLiked" parameterType="map" resultType="com.sp.app.model.TipBoard">
		SELECT tipId, memberId
		FROM tipLike
		WHERE tipId = #{tipId} AND memberId = #{memberId}
	</select>
	
	
	
	
	
	
	
	
	

</mapper>
