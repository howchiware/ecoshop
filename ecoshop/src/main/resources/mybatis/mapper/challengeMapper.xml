<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.ChallengeMapper">

  <!-- 공통 컬럼 -->
  <sql id="baseColumns">
    c.challengeId, c.title, c.description, c.thumbnail,
    c.rewardPoints, TO_CHAR(c.regDate,'YYYY-MM-DD HH24:MI:SS') AS challengeRegDate,
    c.challengeType
  </sql>

  <!-- 데일리 - 요일 챌린지 7개 -->
  <select id="listDailyAll" resultType="com.sp.app.model.Challenge">
    SELECT <include refid="baseColumns"/>, d.weekday
    FROM challenge c
    JOIN dailyChallenge d ON d.challengeId = c.challengeId
    WHERE c.challengeType = 'DAILY'
    ORDER BY d.weekday
  </select>

  <!-- 오늘 요일 챌린지 1개 -->
<select id="listSpecialMore" parameterType="map" resultType="com.sp.app.model.Challenge">
  SELECT
    c.challengeId, c.title, c.description, c.thumbnail,
    c.rewardPoints,
    TO_CHAR(c.regDate,'YYYY-MM-DD HH24:MI:SS') AS challengeRegDate,
    c.challengeType,
    TO_CHAR(s.startDate,'YYYY-MM-DD') AS startDate,
    TO_CHAR(s.endDate,'YYYY-MM-DD')   AS endDate,
    s.requireDays,
    s.status AS specialStatus
  FROM challenge c
  JOIN specialChallenge s ON s.challengeId = c.challengeId
  WHERE c.challengeType = 'SPECIAL'
    AND s.status IN (0, 1)
    AND (SYSDATE BETWEEN s.startDate AND s.endDate OR SYSDATE &lt; s.startDate)

  <choose>
    <!-- 종료일 빠른 순 (커서: endDate, challengeId) -->
    <when test="sort == 'CLOSE_DATE'">
      <if test="lastEndDate != null and lastEndDate != ''">
        AND (
          s.endDate &gt; TO_DATE(#{lastEndDate}, 'YYYY-MM-DD')
          OR (s.endDate = TO_DATE(#{lastEndDate}, 'YYYY-MM-DD') AND c.challengeId &gt; #{lastId})
        )
      </if>
      ORDER BY s.endDate ASC NULLS LAST, c.challengeId ASC
    </when>

    <!-- 인기순 -->
    <when test="sort == 'POPULAR'">
      <if test="lastId != null">
        AND c.challengeId &lt; #{lastId}
      </if>
      ORDER BY c.rewardPoints DESC, c.challengeId DESC
    </when>

    <!-- 최신순 -->
    <otherwise>
      <if test="lastId != null">
        AND c.challengeId &lt; #{lastId}
      </if>
      ORDER BY c.challengeId DESC
    </otherwise>
  </choose>

  FETCH FIRST #{size} ROWS ONLY
</select>



  <!-- 상세 보기 -->
  <select id="findDailyDetail" parameterType="long" resultType="com.sp.app.model.Challenge">
    SELECT
      <include refid="baseColumns"/>,
      d.weekday
    FROM challenge c
    JOIN dailyChallenge d ON d.challengeId = c.challengeId
    WHERE c.challengeId = #{challengeId}
  </select>

  <select id="findSpecialDetail" parameterType="long" resultType="com.sp.app.model.Challenge">
    SELECT
      <include refid="baseColumns"/>,
      TO_CHAR(s.startDate,'YYYY-MM-DD') AS startDate,
      TO_CHAR(s.endDate,'YYYY-MM-DD')   AS endDate,
      s.requireDays,
      s.status AS specialStatus
    FROM challenge c
    JOIN specialChallenge s ON s.challengeId = c.challengeId
    WHERE c.challengeId = #{challengeId}
  </select>

  <!-- 해당 요일 1건 조회 -->
  <select id="selectDailyByWeekday" parameterType="int" resultType="com.sp.app.model.Challenge">
    SELECT
      <include refid="baseColumns"/>,
      d.weekday
    FROM dailyChallenge d
    JOIN challenge c ON c.challengeId = d.challengeId
    WHERE c.challengeType = 'DAILY'
      AND d.weekday = #{weekday}
    FETCH FIRST 1 ROWS ONLY
  </select>

  <!-- 오늘 참여 여부(요일: 당일 1회 제한) -->
  <select id="countTodayDailyJoin" parameterType="map" resultType="Integer">
    SELECT NVL(COUNT(*),0)
    FROM challengeParticipation p
    WHERE p.memberId = #{memberId}
      AND p.challengeId = #{challengeId}
      AND TRUNC(p.participateDate) = TRUNC(SYSDATE)
  </select>

  <!-- 참여 등록 -->
  <select id="nextParticipationId" resultType="long">
    SELECT participation_seq.NEXTVAL FROM dual
  </select>

  <insert id="insertParticipation" parameterType="com.sp.app.model.Challenge">
    INSERT INTO challengeParticipation (
      participationId, challengeId, memberId, participateDate, status, cancelAt
    ) VALUES (
      #{participationId}, #{challengeId}, #{memberId}, SYSDATE,
      NVL(#{participationStatus},0),
      <if test="cancelAt != null and cancelAt != ''">
        TO_DATE(#{cancelAt}, 'YYYY-MM-DD')
      </if>
      <if test="cancelAt == null or cancelAt == ''">
        NULL
      </if>
    )
  </insert>

  <!-- 스페셜 진행률 (인증글 dayNumber 1~3 카운트) -->
  <select id="selectSpecialProgress" parameterType="long" resultType="map">
    SELECT
      c.dayNumber AS dayNumber,
      NVL(COUNT(p.postId),0) AS done
    FROM (SELECT 1 AS dayNumber FROM dual
          UNION ALL SELECT 2 FROM dual
          UNION ALL SELECT 3 FROM dual) c
    LEFT JOIN certificationPost p
      ON p.participationId = #{participationId}
     AND p.dayNumber = c.dayNumber
    GROUP BY c.dayNumber
    ORDER BY c.dayNumber
  </select>

</mapper>
