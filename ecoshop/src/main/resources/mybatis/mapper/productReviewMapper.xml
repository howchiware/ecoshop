<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.ProductReviewMapper">
	<select id="dataCount"  parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) count
		FROM productReview
		WHERE productCode = #{productCode}
		<choose>
			<when test="sortBy==5">
				AND rate = 5 
			</when>
			<when test="sortBy==4">
				AND rate = 4 
			</when>
			<when test="sortBy==3">
				AND rate = 3  
			</when>
			<when test="sortBy==2">
				AND rate = 2 
			</when>
			<when test="sortBy==1">
				AND rate = 1 
			</when>
		</choose>
		<if test="onlyPhoto==1">
			AND reviewId IN(
				SELECT reviewId
				FROM productReviewDetail
			)
		</if>
	</select>

	<select id="listReview" parameterType="map" resultType="com.sp.app.model.ProductReview">
		SELECT pr.reviewId, pr.memberId, pr.productCode, m2.name, rate, 
			content, showReview, regDate, answer, answerId, 
			answerDate, block, reviewImg
		FROM productReview pr
		JOIN member2 m2 ON pr.memberId = m2.memberId
		LEFT OUTER JOIN (
			SELECT reviewId, LISTAGG(reviewImg, ',') WITHIN GROUP(ORDER BY reviewId) reviewImg
			FROM productReviewDetail
			GROUP BY reviewId
		) rd ON pr.reviewId = rd.reviewId
		WHERE pr.productCode = #{productCode} AND showReview = 1 AND block = 0
		<choose>
			<when test="sortBy==5">
				AND rate = 5 
			</when>
			<when test="sortBy==4">
				AND rate = 4 
			</when>
			<when test="sortBy==3">
				AND rate = 3  
			</when>
			<when test="sortBy==2">
				AND rate = 2 
			</when>
			<when test="sortBy==1">
				AND rate = 1 
			</when>
		</choose>
		ORDER BY regDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="listReviewOnlyPhoto" parameterType="map" resultType="com.sp.app.model.ProductReview">
		SELECT pr.reviewId, pr.memberId, pr.productCode, m2.name, rate, 
			content, showReview, regDate, answer, answerId, 
			answerDate, block, reviewImg
		FROM productReview pr
		JOIN member2 m2 ON pr.memberId = m2.memberId
		LEFT OUTER JOIN (
			SELECT reviewId, LISTAGG(reviewImg, ',') WITHIN GROUP(ORDER BY reviewId) reviewImg
			FROM productReviewDetail
			GROUP BY reviewId
		) rd ON pr.reviewId = rd.reviewId
		WHERE pr.productCode = #{productCode} AND showReview = 1 AND block = 0
			AND pr.reviewId IN(
				SELECT reviewId
				FROM productReviewDetail
			)
		<choose>
			<when test="sortBy==5">
				AND rate = 5 
			</when>
			<when test="sortBy==4">
				AND rate = 4 
			</when>
			<when test="sortBy==3">
				AND rate = 3  
			</when>
			<when test="sortBy==2">
				AND rate = 2 
			</when>
			<when test="sortBy==1">
				AND rate = 1 
			</when>
		</choose>
		ORDER BY regDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="findByReviewSummary" parameterType="map" resultType="com.sp.app.model.Summary">
		SELECT NVL(COUNT(*), 0) count,
			   ROUND(NVL(AVG(rate), 0), 1) ave
		FROM productReview
		WHERE productCode = #{productCode} AND showReview = 1 AND block = 0
	</select>
	
	<insert id="insertReview" parameterType="com.sp.app.model.ProductReview">
		INSERT INTO productReview(reviewId, rate, content, productCode, memberId, 
			regDate, showReview, block)
		VALUES(#{reviewId}, #{rate}, #{content}, #{productCode}, #{memberId}, SYSDATE, 1, 0)
	</insert>
	
	<insert id="insertReviewPhoto" parameterType="com.sp.app.model.ProductReview">
		INSERT INTO productReviewDetail(reviewPhotoId, reviewId, reviewImg)
		VALUES(productReviewDetail_seq.NEXTVAL, #{reviewId}, #{reviewImg})
	</insert>
	
	<select id="viewReviewDetail" parameterType="Long" resultType="com.sp.app.model.ProductReview">
		SELECT pr.reviewId, pr.memberId, pr.productCode, pr.content, pr.rate, pr.showReview, pr.regDate, pr.answer, pr.answerId, pr.answerDate, pr.block,
				m2.name, reviewImg
		FROM productReview pr
		JOIN member2 m2 ON pr.memberId = m2.memberId
		LEFT OUTER JOIN (
			SELECT reviewId, LISTAGG(reviewImg, ',') WITHIN GROUP(ORDER BY reviewId) reviewImg
			FROM productReviewDetail
			GROUP BY reviewId
		) rd ON pr.reviewId = rd.reviewId
		WHERE pr.reviewId = #{reviewId} AND pr.showReview = 1 AND pr.block = 0
	</select>
	
	<delete id="deleteReviewHelpful" parameterType="com.sp.app.model.ReviewHelpful">
		DELETE FROM reviewHelpful WHERE memberId = #{memberId} AND orderDetailId = #{orderDetailId}
	</delete>
	
	<insert id="insertReviewHelpful" parameterType="com.sp.app.model.ReviewHelpful">
		INSERT INTO reviewHelpful(memberId, orderDetailId, reviewHelpful) 
		VALUES(#{memberId}, #{orderDetailId}, #{userReviewHelpful})
	</insert>
	
	<select id="countReviewHelpful" parameterType="Long" resultType="Integer">
		SELECT COUNT(DECODE(reviewHelpful, 1, 1)) helpfulCount
		FROM reviewHelpful
		WHERE orderDetailId = #{orderDetailId}
	</select>
	
	<select id="userReviewHelpful" parameterType="map" resultType="Integer">
		SELECT reviewHelpful
		FROM reviewHelpful
		WHERE orderDetailId = #{orderDetailId} AND memberId = #{memberId}
	</select>
	
	<select id="myDataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM productReview
		<where>
			<if test="memberId != null">
				memberId = #{memberId}
			</if>
			<if test="mode != null">
				<if test="mode == 2">
					AND ( answer IS NOT NULL )
				</if>
				<if test="mode == 3">
					AND ( answer IS NULL )
				</if>
			</if>
		</where>
	</select>
	
	<select id="listMyReview" parameterType="map" resultType="com.sp.app.model.ProductReview">
		SELECT pr.reviewId, pr.memberId, m2.name, rate, pr.content, pr.regDate, 
			pr.answerId, mm2.name answerName, pr.answer, pr.answerDate, 
			pr.showReview, pr.block,  
			pr.productCode, f.reviewImg, 
			p.productName, op.optionValue, op2.optionValue optionValue2
		FROM productReview pr
		JOIN member2 m2 ON pr.memberId = m2.memberId 
		LEFT OUTER JOIN member2 mm2 ON pr.answerId = mm2.memberId 
		JOIN orderDetail od ON pr.reviewId = od.orderDetailId
		JOIN product p ON p.productCode = od.productCode
		LEFT OUTER JOIN optionDetail op ON od.optionDetailNum = op.optionDetailNum
		LEFT OUTER JOIN optionDetail op2 ON od.optionDetailNum2 = op2.optionDetailNum		
		LEFT OUTER JOIN (
			SELECT reviewId, LISTAGG(reviewImg, ',') WITHIN GROUP(ORDER BY reviewPhotoId) reviewImg
            FROM productReviewDetail
            GROUP BY reviewId	
		) f ON pr.reviewId=f.reviewId
		<where>
			<if test="memberId != null">
				pr.memberId = #{memberId}
			</if>
			<if test="mode != null">
				<if test="mode == 2">
					AND ( answer IS NOT NULL )
				</if>
				<if test="mode == 3">
					AND ( answer IS NULL )
				</if>
			</if>
		</where>
		ORDER BY pr.regDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
		
	<select id="listReviewFile" parameterType="long" resultType="com.sp.app.model.ProductReview">
		SELECT reviewPhotoId, reviewId, reviewImg
		FROM productReviewDetail
		WHERE reviewId = #{reviewId}
	</select>
		
	<delete id="deleteReview" parameterType="long">
		DELETE FROM productReview
		WHERE reviewId = #{reviewId}
	</delete>
	
	<select id="imgList" parameterType="long" resultType="com.sp.app.model.ProductReview">
		SELECT prd.reviewId, prd.reviewImg 
		FROM productReviewDetail prd
		JOIN productReview pr ON prd.reviewId = pr.reviewId
		WHERE productCode = #{productCode}
	</select>
</mapper>